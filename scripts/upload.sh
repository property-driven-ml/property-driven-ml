#!/bin/bash
# Upload script for TestPyPI and PyPI distribution

set -e

echo "üöÄ Property-Driven ML Distribution Helper"
echo "========================================="

# Check if we're in the right directory
if [[ ! -f pyproject.toml ]]; then
    echo "‚ùå Error: pyproject.toml not found. Please run from the repository root."
    exit 1
fi

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check for required tools
echo "üîç Checking requirements..."
if ! command_exists uv; then
    echo "‚ùå uv is required but not installed. Please install it first:"
    echo "   curl -LsSf https://astral.sh/uv/install.sh | sh"
    exit 1
fi

if ! command_exists twine; then
    echo "üì¶ Installing twine for package uploads..."
    uv add --dev twine
fi

echo "‚úÖ All requirements satisfied"

# Clean and build
echo ""
echo "üßπ Cleaning previous builds..."
rm -rf dist/ build/ src/*.egg-info/

echo "üî® Building package..."
uv build

echo "‚úÖ Build completed successfully"

# Display options
echo ""
echo "üìã Available commands:"
echo "1. upload-test    - Upload to TestPyPI"
echo "2. upload-prod    - Upload to PyPI (production)"
echo "3. check          - Check distribution files"
echo "4. status         - Check token configuration status"

if [[ $# -eq 0 ]]; then
    echo ""
    echo "Usage: $0 [command]"
    echo "Example: $0 upload-test"
    exit 0
fi

case "$1" in
    "upload-test")
        echo ""
        echo "üß™ Uploading to TestPyPI..."
        
        # Check if ~/.pypirc exists and has testpypi token
        if [[ ! -f ~/.pypirc ]]; then
            echo "‚ùå ~/.pypirc file not found. Copying local .pypirc to home directory..."
            if [[ -f .pypirc ]]; then
                cp .pypirc ~/.pypirc
                echo "‚úÖ Copied .pypirc to home directory"
            else
                echo "‚ùå No .pypirc file found. Please run ./scripts/setup-tokens.sh first."
                exit 1
            fi
        fi
        
        if grep -q "YOUR_TESTPYPI_TOKEN_HERE" ~/.pypirc; then
            echo "‚ùå TestPyPI token not configured. Please run ./scripts/setup-tokens.sh first."
            exit 1
        fi
        
        echo "‚úÖ Using configured TestPyPI token from ~/.pypirc"
        uv run twine upload --repository testpypi dist/*
        echo ""
        echo "‚úÖ Upload to TestPyPI completed!"
        echo "üìù To test the installation:"
        echo "   # Using pip:"
        echo "   pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ property-driven-ml"
        echo "   # Using uv:"
        echo "   uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ property-driven-ml"
        ;;
    "upload-prod")
        echo ""
        echo "üöÄ Uploading to PyPI (PRODUCTION)..."
        
        # Check if ~/.pypirc exists and has pypi token
        if [[ ! -f ~/.pypirc ]]; then
            echo "‚ùå ~/.pypirc file not found. Copying local .pypirc to home directory..."
            if [[ -f .pypirc ]]; then
                cp .pypirc ~/.pypirc
                echo "‚úÖ Copied .pypirc to home directory"
            else
                echo "‚ùå No .pypirc file found. Please run ./scripts/setup-tokens.sh first."
                exit 1
            fi
        fi
        
        if grep -q "YOUR_PYPI_TOKEN_HERE" ~/.pypirc; then
            echo "‚ùå PyPI token not configured. Please run ./scripts/setup-tokens.sh first."
            exit 1
        fi
        
        echo "‚úÖ Using configured PyPI token from ~/.pypirc"
        echo ""
        echo "‚ö†Ô∏è  This will upload to the real PyPI! Are you sure? (y/N)"
        read -r confirm
        if [[ $confirm == "y" || $confirm == "Y" ]]; then
            uv run twine upload dist/*
            echo ""
            echo "‚úÖ Upload to PyPI completed!"
            echo "üìù Your package is now available:"
            echo "   # Using pip:"
            echo "   pip install property-driven-ml"
            echo "   # Using uv:"
            echo "   uv pip install property-driven-ml"
        else
            echo "‚ùå Upload cancelled"
        fi
        ;;
    "check")
        echo ""
        echo "üîç Checking distribution files..."
        uv run twine check dist/*
        echo ""
        echo "üìä Distribution files:"
        ls -lh dist/
        ;;
    "status")
        echo ""
        echo "üîç Token Configuration Status:"
        if [[ ! -f ~/.pypirc ]]; then
            echo "‚ùå ~/.pypirc file not found"
            echo "üìù Run ./scripts/setup-tokens.sh to configure tokens"
        else
            echo "‚úÖ ~/.pypirc file exists"
            
            if grep -q "YOUR_TESTPYPI_TOKEN_HERE" ~/.pypirc; then
                echo "‚ùå TestPyPI token: Not configured"
            else
                echo "‚úÖ TestPyPI token: Configured"
            fi
            
            if grep -q "YOUR_PYPI_TOKEN_HERE" ~/.pypirc; then
                echo "‚ùå PyPI token: Not configured"
            else
                echo "‚úÖ PyPI token: Configured"
            fi
            
            echo ""
            echo "üìù To update tokens, run: ./scripts/setup-tokens.sh"
        fi
        ;;
    *)
        echo "‚ùå Unknown command: $1"
        echo "Available commands: upload-test, upload-prod, check, install-test, status"
        exit 1
        ;;
esac
