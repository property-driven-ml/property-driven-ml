name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  # Pre-publish validation
  validate:
    name: Validate package before publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --group dev --group test --group deploy

    - name: Run tests
      run: uv run pytest tests/ -v --tb=short

    - name: Run linting
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    - name: Verify package imports
      run: |
        uv run python -c "import property_driven_ml; print('Main package imports successfully')"
        uv run python -c "from property_driven_ml.constraints import StandardRobustnessConstraint; print('Constraints module imports successfully')"
        uv run python -c "from property_driven_ml.logics import BooleanLogic; print('Logics module imports successfully')"
        uv run python -c "from property_driven_ml.training.attacks import PGD; print('Training module imports successfully')"

    - name: Build package
      run: uv build

    - name: Check package metadata
      run: uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  # Publish to PyPI
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: validate
    environment:
      name: pypi
      url: https://pypi.org/p/property-driven-ml
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true

  # Post-publish verification
  verify-publish:
    name: Verify PyPI publication
    runs-on: ubuntu-latest
    needs: publish

    steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Wait for PyPI propagation
      run: sleep 60

    - name: Test installation from PyPI
      run: |
        # Create a temporary directory and test installation
        mkdir test-install && cd test-install
        uv init --python 3.12 test-project
        cd test-project
        uv add property-driven-ml
        uv run python -c "import property_driven_ml; print(f'Successfully installed property-driven-ml version: {property_driven_ml.__version__}')"
